diff --git a/core/lib/Drupal/Core/Entity/ContentEntityStorageBase.php b/core/lib/Drupal/Core/Entity/ContentEntityStorageBase.php
index 7e18e5bca1..4082218c39 100644
--- a/core/lib/Drupal/Core/Entity/ContentEntityStorageBase.php
+++ b/core/lib/Drupal/Core/Entity/ContentEntityStorageBase.php
@@ -376,11 +376,13 @@ public function createRevision(RevisionableInterface $entity, $default = TRUE, $
 
     $original_keep_untranslatable_fields = $keep_untranslatable_fields;
 
+    $current_path = \Drupal::service('path.current')->getPath();
+
     // For translatable entities, create a merged revision of the active
     // translation and the other translations in the default revision. This
     // permits the creation of pending revisions that can always be saved as the
     // new default revision without reverting changes in other languages.
-    if (!$entity->isNew() && !$entity->isDefaultRevision() && $entity->isTranslatable() && $this->isAnyRevisionTranslated($entity)) {
+    if (!$entity->isNew() && $entity->isTranslatable() && $this->isAnyRevisionTranslated($entity)) {
       $active_langcode = $entity->language()->getId();
       $skipped_field_names = array_flip($this->getRevisionTranslationMergeSkippedFieldNames());
 
@@ -397,11 +399,21 @@ public function createRevision(RevisionableInterface $entity, $default = TRUE, $
       $default_revision = $this->load($entity->id());
       $translation_languages = $default_revision->getTranslationLanguages();
       foreach ($translation_languages as $langcode => $language) {
-        if ($langcode == $active_langcode) {
-          continue;
+        if (stristr($current_path, '/revert/')) {
+          if ($langcode == $active_langcode) {
+            continue;
+          }
+          $default_revision_translation = $default_revision->getTranslation($langcode);
+        }
+        else {
+          if ($langcode == $active_langcode || $entity->language()->isDefault()) {
+            continue;
+          }
+          $storage = \Drupal::entityTypeManager()
+            ->getStorage($entity->getEntityTypeId());
+          $default_revision_translation_id = $storage->getLatestTranslationAffectedRevisionId($entity->id(), $langcode);
+          $default_revision_translation = $storage->loadRevision($default_revision_translation_id);
         }
-
-        $default_revision_translation = $default_revision->getTranslation($langcode);
         $new_revision_translation = $new_revision->hasTranslation($langcode) ?
           $new_revision->getTranslation($langcode) : $new_revision->addTranslation($langcode);
 
