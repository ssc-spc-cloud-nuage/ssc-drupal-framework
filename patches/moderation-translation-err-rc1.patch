diff --git a/entity_reference_revisions.module b/entity_reference_revisions.module
index 82c3cd7..4ea32ee 100644
--- a/entity_reference_revisions.module
+++ b/entity_reference_revisions.module
@@ -243,12 +243,8 @@ function entity_reference_revisions_entity_revision_create(ContentEntityInterfac
         $target_storage = \Drupal::entityTypeManager()->getStorage($target_entity_type_id);
         if ($target_storage instanceof TranslatableRevisionableStorageInterface) {
 
-          $items = $entity->get($field_name);
-          $translation_items = NULL;
-          if (!$new_revision->isDefaultTranslation() && $storage instanceof TranslatableRevisionableStorageInterface) {
-            $translation_items = $items;
-            $items = $storage->load($new_revision->id())->get($field_name);
-          }
+          $items = $new_revision->get($field_name);
+          $translation_items = $entity->get($field_name);
 
           $values = [];
           foreach ($items as $delta => $item) {
@@ -275,7 +271,7 @@ function entity_reference_revisions_entity_revision_create(ContentEntityInterfac
               $target_entity->addTranslation($active_langcode, $target_entity->toArray());
             }
             $target_entity = $item->entity->getTranslation($active_langcode);
-            $revised_entity = $target_storage->createRevision($target_entity, $new_revision->isDefaultRevision(), $keep_untranslatable_fields);
+            $revised_entity = $target_storage->createRevision($target_entity, TRUE, $keep_untranslatable_fields);
 
             // Restore the revision ID.
             $revision_key = $revised_entity->getEntityType()->getKey('revision');
